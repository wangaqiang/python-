一.OSI七层模型
    物理层，数据链路层，网络层，传输层，会话层，表示层，应用层
二.TCP/IP四层模型
    链路层，网络层，传输层，应用层
三.端口
    知名端口：0——1023
    动态端口：1024-65535
四.IP地址
    总共四个字节，主机号为0和255的不能用，0代表的是网络号，255代表的是广播地址。
五.socket
    1.创建套接字 实例化socket模块中的socket类，
    TCP:socket(AF_INET, SOCK_STREAM)
    UDP:udp_socket = socket(AF_INET, SOCK_DGRAM)
    2.绑定
    udp_socket.bind(('', port))
    3.发送东西
    udp_socket.sendto(b'发送的内容'，('ip', port)) python3用字符串.encode('utf-8')编码
    4.接收
    udp_socket.recvfrom() 接受到的是一个元组  第一个参数是数据 第二个参数是一个元组，元组里面第一个参数是发送方的ip，第二个参数是端口。数据.decode()进行解码
六.网络通信过程
    发送方：应用层发出数据——>传输层给数据加上目的端口和源端口号——>网络层加上目的IP和源IP——>链路层加上MAC地址————>接受方链路层拆包看MAC地址是否一样——>网络层看IP地址——>传输层看端口号决定给应用层哪个进程——>应用层相应的进程收到数据。
七.echo服务器
    将收到的东西原发回给发送方为echo服务器