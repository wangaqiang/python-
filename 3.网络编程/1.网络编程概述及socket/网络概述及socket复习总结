一.OSI七层模型
    物理层，数据链路层，网络层，传输层，会话层，表示层，应用层
二.TCP/IP四层模型
    链路层，网络层，传输层，应用层
三.端口
    知名端口：0——1023
    动态端口：1024-65535
四.IP地址
    总共四个字节，主机号为0和255的不能用，0代表的是网络号，255代表的是广播地址。
五.网络掩码
    A类地址：255.0.0.0
    B类地址：255.255.0.0
    C类地址：255.255.255.0
    与IP地址转换为二进制形式按位与得到网络号
六.udpsocket
    1.创建套接字 实例化socket模块中的socket类，
    TCP:socket(AF_INET, SOCK_STREAM)
    UDP:udp_socket = socket(AF_INET, SOCK_DGRAM)
    2.绑定
    udp_socket.bind(('', port))
    3.发送东西
    udp_socket.sendto(b'发送的内容'，('ip', port)) python3用字符串.encode('utf-8')编码
    4.接收
    udp_socket.recvfrom() 接受到的是一个元组  第一个参数是数据 第二个参数是一个元组，元组里面第一个参数是发送方的ip，第二个参数是端口。数据.decode()进行解码
七.udp广播
    只有udp有广播，tcp没有广播
    想要广播必须实现以下代码
    udpsocket.setsockopt(SOL_SOCKET,SO_BROADCAST,1)
    目的IP地址写广播地址或者'<broadcast>'
八.TCP传输控制协议，UDP用户数据包协议
    tcp：稳定，相对于udp慢一点。web服务器都是用tcp开发
    udp：不稳定，比tcp快一点
    tcp服务器：1.serversocket = socket(AF_INET,SOCK_STREAM)
              2.serversocket.bind()
              3.serversocket.listen(放一个值) 将主动套接字变为被动套接字
              4.clientsocket, clientinfo = serversocket.accept() 返回值为一个元组，第一个元素为新的socket，第二个元素为客户端的信息的元组  默认阻塞
              5.clientsocket.recv()  默认阻塞
              6.clientsocket.send() 
              7.clientsocket.close()
              8.serversocket.close()
              socket创建出来的套接字默认为主动套接字即主动给别人发消息，想要收消息须改为被动套接字
    tcp客户端：1.tcpclientsocket = socket(AF_INET,SOCK_STREAM)
              2.tcpclientsocket.connect(('IP'，port))
              3.tcpclientsocket.send() 
              4.tcpclientsocket.recv() 
              5.tcpclientsocket.close()
              socket创建出来的套接字默认为主动套接字即主动给别人发消息，想要收消息须改为被动套接字
九.tcp服务器框架
    客户端调用close，服务器recv解堵塞，并且收到的数据长度为0

十.echo服务器
    将收到的东西原发回给发送方为echo服务器